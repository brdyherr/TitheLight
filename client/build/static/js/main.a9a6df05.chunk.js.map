{"version":3,"sources":["utils/API.js","utils/auth.js","components/AddTitheForm.js","pages/SavedTithes.js","pages/HomePage.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["getMe","token","fetch","headers","authorization","loginUser","userData","method","body","JSON","stringify","saveTithe","titheData","deleteTithe","titheId","decode","this","getToken","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","AddTitheForm","useState","amount","userFormData","setUserFormData","validated","showAlert","setShowAlert","handleFormSubmit","event","a","preventDefault","currentTarget","checkValidity","stopPropagation","Auth","loggedIn","response","ok","Error","json","user","console","error","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","name","onChange","target","value","required","Feedback","Button","disabled","SavedTithes","setUserData","showModal","setShowModal","updatedTithe","setUpdatedTithe","userDataLength","Object","keys","length","log","useEffect","getUserData","handleDeleteTithe","updatedUser","Jumbotron","fluid","className","Container","tithes","onClick","CardColumns","map","tithe","Card","border","Body","Title","size","e","_id","date","Text","Modal","onHide","Header","closeButton","id","handleModalClose","HomePage","email","password","handleInputChange","login","SignupForm","username","LoginForm","AppNavbar","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","logout","aria-labelledby","Tab","defaultActiveKey","Item","eventKey","Content","Pane","App","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9a6df05.chunk.js","sourcesContent":["// route to get logged in user's info (needs the token)\r\nexport const getMe = (token) => {\r\n  return fetch('/api/users/me', {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createUser = (userData) => {\r\n  return fetch('/api/users', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n};\r\n\r\nexport const loginUser = (userData) => {\r\n  return fetch('/api/users/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n};\r\n\r\n// save book data for a logged in user\r\nexport const saveBook = (bookData, token) => {\r\n  return fetch('/api/users', {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(bookData),\r\n  });\r\n};\r\n\r\n// TODO\r\n// FINISH THIS CLASS and other methods like PUT and DELETE FOR a TITHE! \r\n// save book data for a logged in user\r\nexport const saveTithe = (titheData, token) => {\r\n  return fetch(`/api/users/tithes`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(titheData),\r\n  });\r\n};\r\n\r\n\r\n// remove saved book data for a logged in user\r\nexport const deleteBook = (bookId, token) => {\r\n  return fetch(`/api/users/books/${bookId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteTithe = (titheId, token) => {\r\n  return fetch(`/api/users/tithes/${titheId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\n// make a search to google books api\r\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\r\nexport const searchGoogleBooks = (query) => {\r\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n};\r\n","// use this to decode a token and get the user's information out of it\r\nimport decode from 'jwt-decode';\r\n\r\n// create a new class to instantiate for a user\r\nclass AuthService {\r\n  // get user data\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  // check if user's logged in\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  }\r\n\r\n  // check if token is expired\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { saveTithe } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\n\r\nconst AddTitheForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ amount: 0.00 });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  // use effect to get the current token for the user.. \r\n  // no validation needed because modal is within the validated apage\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    \r\n    try {\r\n\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n      const response = await saveTithe(userFormData, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { user } = await response.json();\r\n    \r\n      window.location = \"/saved\";\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      amount: 0.00\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with adding your tithe!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='amount'>Amount</Form.Label>\r\n          <Form.Control\r\n            type='number'\r\n            placeholder='Your amount'\r\n            name='amount'\r\n            onChange={handleInputChange}\r\n            value={userFormData.amount}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Amount is required!</Form.Control.Feedback>\r\n        </Form.Group> \r\n\r\n        <Button\r\n          disabled={!(userFormData.amount)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTitheForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, CardColumns, Card, Button, Modal, Form } from 'react-bootstrap';\r\n\r\nimport { getMe, deleteTithe } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\nimport AddTitheForm from '../components/AddTitheForm';\r\n\r\nconst SavedTithes = () => {\r\n  const [userData, setUserData] = useState({});\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [updatedTithe, setUpdatedTithe] = useState({});\r\n\r\n  // use this to determine if `useEffect()` hook needs to run again\r\n  const userDataLength = Object.keys(userData).length;\r\n  console.log(\"Length is \", userDataLength);\r\n\r\n  useEffect(() => {\r\n    const getUserData = async () => {\r\n      try {\r\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n        if (!token) {\r\n          return false;\r\n        }\r\n\r\n        const response = await getMe(token);\r\n\r\n        if (!response.ok) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n\r\n        const user = await response.json(); \r\n        console.log(\"FOUND THE USER\" + JSON.stringify(user));\r\n        setUserData(user);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    \r\n\r\n    getUserData();\r\n  }, [userDataLength]);\r\n\r\n  // create function that accepts the tithe's mongo _id value as param and deletes the tithe from the database\r\n  const handleDeleteTithe = async (titheId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await deleteTithe(titheId, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUserData(updatedUser);\r\n    \r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  const handleUpdate = () => {\r\n    console.log(\"UPDATING\");\r\n    console.log(updatedTithe); \r\n  };\r\n  // if data isn't here yet, say so\r\n  if (!userDataLength) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing Tithe and Offerings!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.tithes.length\r\n            ? `Viewing ${userData.tithes.length} saved ${userData.tithes.length === 1 ? 'tithe' : 'tithes'}:`\r\n            : 'You have no saved tithes!'}\r\n        </h2>\r\n        <h3>\r\n        <Button onClick={() => setShowModal(true)}>Add Tithe</Button>\r\n          </h3> \r\n        <CardColumns>\r\n          {userData.tithes.map((tithe) => {\r\n            return (\r\n              <Card key={tithe._id} border='dark'>\r\n                <Card.Body>\r\n\r\n                  <Card.Title>Amount Given:</Card.Title>\r\n                  <Form.Control className='small'\r\n                  name='searchInput'\r\n                  value={tithe.amount}\r\n                  type='number'\r\n                  size='lg'\r\n                  onChange = {(e) => setUpdatedTithe({titheId: tithe._id, date: tithe.date, amount: e.target.value})}\r\n                  placeholder='Search for a donation'>\r\n                  </Form.Control>\r\n                  <Card.Text>Given on: {tithe.date}</Card.Text>\r\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteTithe(tithe._id)}>\r\n                    Delete this donation!\r\n                  </Button>\r\n                  <Button className='btn-block btn-warning' onClick={() => handleUpdate()}>\r\n                    Update this donation!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n        <Modal\r\n         size='lg'\r\n         show={showModal}\r\n         onHide={() => setShowModal(false)}\r\n         > \r\n        <Modal.Header closeButton>\r\n            <Modal.Title id='add-tithe-modal'>\r\n               Add Tithe\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n               <AddTitheForm handleModalClose={() => setShowModal(false)} />\r\n          </Modal.Body>\r\n          </Modal>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedTithes;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Alert, Container } from 'react-bootstrap';\r\nimport { loginUser } from '../utils/API';\r\n/* */\r\nimport Auth from '../utils/auth';\r\n\r\nconst HomePage = () => {\r\n    // set initial form state\r\n    const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n    // set state for form validation\r\n    const [validated] = useState(false);\r\n    // set state for alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n  \r\n    const handleInputChange = (event) => {\r\n      const { name, value } = event.target;\r\n      setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n  \r\n    const handleFormSubmit = async (event) => {\r\n      event.preventDefault();\r\n  \r\n      // check if form has everything (as per react-bootstrap docs)\r\n      const form = event.currentTarget;\r\n      if (form.checkValidity() === false) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n  \r\n      try {\r\n        const response = await loginUser(userFormData);\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n  \r\n        const { token, user } = await response.json();\r\n        console.log(\"USER WAS JUST LOGGED IN-- FROM HOMEPAGE.js\");\r\n        console.log(user);\r\n        Auth.login(token);\r\n        window.location = \"/saved\";\r\n      } catch (err) {\r\n        console.error(err);\r\n        setShowAlert(true);\r\n      }\r\n  \r\n      setUserFormData({\r\n        email: '',\r\n        password: '',\r\n      });\r\n    };\r\n  \r\n\r\n  return (\r\n    <>\r\n     <Container>\r\n\r\n        {/* This is needed for the validation functionality above */}\r\n        <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n          {/* show alert if server response is bad */}\r\n          <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n            These are incorrect credentials. Try again. \r\n          </Alert>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor='email'>Email</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Your email'\r\n              name='email'\r\n              onChange={handleInputChange}\r\n              value={userFormData.email}\r\n              required\r\n              />\r\n            <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor='password'>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Your password'\r\n              name='password'\r\n              onChange={handleInputChange}\r\n              value={userFormData.password}\r\n              required\r\n              />\r\n            <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Button\r\n            disabled={!(userFormData.email && userFormData.password)}\r\n            type='submit'\r\n            variant='success'>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { createUser } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const response = await createUser(userFormData);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { token, user } = await response.json();\r\n      console.log(user);\r\n      Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='username'>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","// see SignupForm.js for comments\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { loginUser } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const response = await loginUser(userFormData);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { token, user } = await response.json();\r\n      console.log(user);\r\n      Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your email'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from './SignupForm';\r\nimport LoginForm from './LoginForm';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            TitheLight\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              <Nav.Link as={Link} to='/'>\r\n                See your Donations\r\n              </Nav.Link>\r\n              {/* if user is logged in show saved books and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to='/saved'>\r\n                    See Your Donations\r\n                  </Nav.Link>\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport SavedTithes from './pages/SavedTithes';\r\nimport HomePage from './pages/HomePage';\r\nimport Navbar from './components/Navbar';\r\n//  <Route exact path='/' component={SearchBooks} />\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <>\r\n        <Navbar />\r\n        <Switch>\r\n       \r\n        <Route exact path='/' component={HomePage} />\r\n          <Route exact path='/saved' component={SavedTithes} />\r\n          <Route render={() => <h1 className='display-2'>Wrong page!</h1>} />\r\n        </Switch>\r\n      </>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}