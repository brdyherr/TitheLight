{"version":3,"sources":["utils/API.js","utils/auth.js","components/AddTitheForm.js","pages/SavedTithes.js","pages/HomePage.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["getMe","token","fetch","headers","authorization","updateUser","userData","method","body","JSON","stringify","loginUser","saveTithe","titheData","deleteTithe","titheId","decode","this","getToken","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","AddTitheForm","useState","amount","userFormData","setUserFormData","validated","showAlert","setShowAlert","handleFormSubmit","event","a","preventDefault","currentTarget","checkValidity","stopPropagation","Auth","loggedIn","response","ok","Error","json","user","console","error","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","name","onChange","target","value","required","Feedback","Button","disabled","SavedTithes","setUserData","showModal","setShowModal","updatedTithe","setUpdatedTithe","userDataLength","Object","keys","length","log","useEffect","getUserData","handleDeleteTithe","updatedUser","handleUpdate","tithes","map","x","_id","reload","Jumbotron","fluid","className","Container","onClick","CardColumns","filter","tithe","Card","key","border","Body","Title","defaultValue","size","e","updateTitheObjectFromInput","date","Text","Modal","onHide","Header","closeButton","id","handleModalClose","HomePage","email","password","handleInputChange","login","SignupForm","username","LoginForm","AppNavbar","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","logout","aria-labelledby","Tab","defaultActiveKey","Item","eventKey","Content","Pane","App","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.960244b0.chunk.js","sourcesContent":["// route to get logged in user's info (needs the token)\r\nexport const getMe = (token) => {\r\n  return fetch('/api/users/me', {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createUser = (userData) => {\r\n  return fetch('/api/users', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n};\r\n\r\nexport const updateUser = (userData, token) => {\r\n  return fetch('/api/users/update-user', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n};\r\n\r\nexport const loginUser = (userData) => {\r\n  return fetch('/api/users/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n};\r\n\r\n// save book data for a logged in user\r\nexport const saveBook = (bookData, token) => {\r\n  return fetch('/api/users', {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(bookData),\r\n  });\r\n};\r\n\r\n// TODO\r\n// FINISH THIS CLASS and other methods like PUT and DELETE FOR a TITHE! \r\n// save book data for a logged in user\r\nexport const saveTithe = (titheData, token) => {\r\n  return fetch(`/api/users/tithes`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(titheData),\r\n  });\r\n};\r\n\r\n\r\n// remove saved book data for a logged in user\r\nexport const deleteBook = (bookId, token) => {\r\n  return fetch(`/api/users/books/${bookId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteTithe = (titheId, token) => {\r\n  return fetch(`/api/users/tithes/${titheId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateTithe = (titheData, token) => {\r\n  return fetch(`/api/users/tithes-update`, {\r\n    method: 'POST',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(titheData)\r\n  });\r\n};\r\n\r\n// make a search to google books api\r\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\r\nexport const searchGoogleBooks = (query) => {\r\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n};\r\n","// use this to decode a token and get the user's information out of it\r\nimport decode from 'jwt-decode';\r\n\r\n// create a new class to instantiate for a user\r\nclass AuthService {\r\n  // get user data\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  // check if user's logged in\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token); // handwaiving here\r\n  }\r\n\r\n  // check if token is expired\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { saveTithe } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\n\r\nconst AddTitheForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ amount: 0.00 });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  // use effect to get the current token for the user.. \r\n  // no validation needed because modal is within the validated apage\r\n\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    \r\n    try {\r\n\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n      const response = await saveTithe(userFormData, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { user } = await response.json();\r\n    \r\n      window.location = \"/saved\";\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      amount: 0.00\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with adding your tithe!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='amount'>Amount</Form.Label>\r\n          <Form.Control\r\n            type='number'\r\n            placeholder='Your amount'\r\n            name='amount'\r\n            onChange={handleInputChange}\r\n            value={userFormData.amount}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Amount is required!</Form.Control.Feedback>\r\n        </Form.Group> \r\n\r\n        <Button\r\n          disabled={!(userFormData.amount)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTitheForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, CardColumns, Card, Button, Modal, Form } from 'react-bootstrap';\r\n// setUpdatedTithe({titheId: tithe._id, date: tithe.date, amount: e.target.value})\r\nimport { getMe, deleteTithe, updateUser } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\nimport AddTitheForm from '../components/AddTitheForm';\r\n\r\nconst SavedTithes = () => {\r\n  const [userData, setUserData] = useState({});\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [updatedTithe, setUpdatedTithe] = useState({});\r\n\r\n  // use this to determine if `useEffect()` hook needs to run again\r\n  const userDataLength = Object.keys(userData).length;\r\n  console.log(userData);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getUserData = async () => {\r\n      try {\r\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n        if (!token) {\r\n          return false;\r\n        }\r\n\r\n        const response = await getMe(token);\r\n\r\n        if (!response.ok) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n\r\n        const user = await response.json(); \r\n        console.log(\"FOUND THE USER\" + JSON.stringify(user));\r\n\r\n        setUserData(user);\r\n\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    \r\n\r\n    getUserData();\r\n  }, [userDataLength]);\r\n\r\n  // create function that accepts the tithe's mongo _id value as param and deletes the tithe from the database\r\n  const handleDeleteTithe = async (titheId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await deleteTithe(titheId, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUserData(updatedUser);\r\n      \r\n    \r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  const updateAllTithes = (updateTitheObjectFromInput) => {\r\n\r\n    setUpdatedTithe(updateTitheObjectFromInput); \r\n    userData.tithes = userData.tithes.map(x => {\r\n      if (x._id == updatedTithe.titheId){\r\n          x.amount = +updatedTithe.amount; \r\n      }\r\n      return x; \r\n      \r\n  }); \r\n  setUserData(userData);\r\n\r\n  }; \r\n  const handleUpdate = async () => {\r\n    console.log(\"UPDATING\");\r\n    console.log(updatedTithe); \r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      userData.tithes = userData.tithes.map(x => {\r\n          if (x._id == updatedTithe.titheId){\r\n              x.amount = +updatedTithe.amount; \r\n          }\r\n          return x; \r\n          \r\n      }); \r\n     /// userData.tithes = updatedTithe.tithes;\r\n      console.log(\"Latest tithes doubled!\");\r\n      console.log(userData.tithes); \r\n      const response = await updateUser(userData, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUserData(updatedUser);\r\n      window.location.reload(); \r\n    \r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  // if data isn't here yet, say so\r\n  if (!userDataLength) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing Tithe and Offerings!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.tithes.length\r\n            ? `Viewing ${userData.tithes.length} saved ${userData.tithes.length === 1 ? 'tithe' : 'tithes'}:`\r\n            : 'You have no saved tithes!'}\r\n        </h2>\r\n        <h3>\r\n        <Button onClick={() => setShowModal(true)}>Add Tithe</Button>\r\n          </h3> \r\n        <CardColumns>\r\n          {userData.tithes.filter(tithe => tithe != null).map((tithe) => {\r\n            return (\r\n              <Card key={tithe._id} border='dark'>\r\n                <Card.Body>\r\n\r\n                  <Card.Title>Amount Given:</Card.Title>\r\n                  <Form.Control className='small'\r\n                  name='searchInput'\r\n                  defaultValue={tithe.amount}\r\n                  type='number'\r\n                  size='lg'\r\n                  onChange = {(e) => updateAllTithes({titheId: tithe._id, date: tithe.date, amount: e.target.value})}\r\n                  placeholder='Search for a donation'>\r\n                  </Form.Control>\r\n                  <Card.Text>Given on: {tithe.date}</Card.Text>\r\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteTithe(tithe._id)}>\r\n                    Delete this donation!\r\n                  </Button>\r\n                  <Button className='btn-block btn-warning' onClick={() => handleUpdate()}>\r\n                    Update this donation!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n        <Modal\r\n         size='lg'\r\n         show={showModal}\r\n         onHide={() => setShowModal(false)}\r\n         > \r\n        <Modal.Header closeButton>\r\n            <Modal.Title id='add-tithe-modal'>\r\n               Add Tithe\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n               <AddTitheForm handleModalClose={() => setShowModal(false)} />\r\n          </Modal.Body>\r\n          </Modal>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedTithes;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Alert, Container } from 'react-bootstrap';\r\nimport { loginUser } from '../utils/API';\r\n/* */\r\nimport Auth from '../utils/auth';\r\n\r\nconst HomePage = () => {\r\n    // set initial form state\r\n    const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n    // set state for form validation\r\n    const [validated] = useState(false);\r\n    // set state for alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n  \r\n    const handleInputChange = (event) => {\r\n      const { name, value } = event.target;\r\n      setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n  \r\n    const handleFormSubmit = async (event) => {\r\n      event.preventDefault();\r\n  \r\n      // check if form has everything (as per react-bootstrap docs)\r\n      const form = event.currentTarget;\r\n      if (form.checkValidity() === false) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n  \r\n      try {\r\n        const response = await loginUser(userFormData);\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n  \r\n        const { token, user } = await response.json();\r\n        console.log(\"USER WAS JUST LOGGED IN-- FROM HOMEPAGE.js\");\r\n        console.log(user);\r\n        Auth.login(token);\r\n        window.location = \"/saved\";\r\n      } catch (err) {\r\n        console.error(err);\r\n        setShowAlert(true);\r\n      }\r\n  \r\n      setUserFormData({\r\n        email: '',\r\n        password: '',\r\n      });\r\n    };\r\n  \r\n\r\n  return (\r\n    <>\r\n     <Container>\r\n\r\n        {/* This is needed for the validation functionality above */}\r\n        <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n          {/* show alert if server response is bad */}\r\n          <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n            These are incorrect credentials. Try again. \r\n          </Alert>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor='email'>Email</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Your email'\r\n              name='email'\r\n              onChange={handleInputChange}\r\n              value={userFormData.email}\r\n              required\r\n              />\r\n            <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label htmlFor='password'>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Your password'\r\n              name='password'\r\n              onChange={handleInputChange}\r\n              value={userFormData.password}\r\n              required\r\n              />\r\n            <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Button\r\n            disabled={!(userFormData.email && userFormData.password)}\r\n            type='submit'\r\n            variant='success'>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { createUser } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const response = await createUser(userFormData);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { token, user } = await response.json();\r\n      console.log(user);\r\n      Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='username'>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","// see SignupForm.js for comments\r\nimport React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { loginUser } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const response = await loginUser(userFormData);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { token, user } = await response.json();\r\n      console.log(user);\r\n      Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your email'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from './SignupForm';\r\nimport LoginForm from './LoginForm';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            TitheLight\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              <Nav.Link as={Link} to='/'>\r\n                Login\r\n              </Nav.Link>\r\n              {/* if user is logged in show saved tithes and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to='/saved'>\r\n                    See Your Donations\r\n                  </Nav.Link>\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport SavedTithes from './pages/SavedTithes';\r\nimport HomePage from './pages/HomePage';\r\nimport Navbar from './components/Navbar';\r\n//  <Route exact path='/' component={SearchBooks} />\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <>\r\n        <Navbar />\r\n        <Switch>\r\n       \r\n        <Route exact path='/' component={HomePage} />\r\n          <Route exact path='/saved' component={SavedTithes} />\r\n          <Route render={() => <h1 className='display-2'>Wrong page!</h1>} />\r\n        </Switch>\r\n      </>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}